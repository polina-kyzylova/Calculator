<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>КЛАВИШИ И ОПЕРАЦИИ

Стандартный калькулятор:

[0] - [9],[,] - клавиши набора чисел 
(отображаются на экране).
[+],[-],[*],[/],[=] - клавиши математических 
операций (не отображаются на экране)
[%] - клавиша для вычисления процента от 
числа (работает без нажатия на 
клавишу равно [=])
[+/-] - клавиша для преобразования знака 
числа на противоположный
(работает без нажатия на клавишу равно 
[=])
[√] - клавиша для нахождения 
квадратоного корня из числа
(работает без нажатия на клавишу равно 
[=])
[x^2] - клавиша для нахождения второй 
степени числа
(работает без нажатия на клавишу равно 
[=])
[x!] - клавиша для нахождения факториала 
числа (Факториал - произведение
заданного числа на все числа от 1 до него), 
(работает без нажатия на клавишу равно 
[=])
[CE] - клавиша для стирания с экрана всех 
чисел, обнуление значений
[C] - клавиша для стирания с экрана одного, 
идущего последним, числа
[MC],[MR], [MS], [M+], [M-] - клавиши 
работы с памятью: [MC] - Memory Clear - 
отчистка памяти, [MR] - Memory Read - 
чтение числа из памяти,[MS] - Memory Save -
сохранение числа в память, [M+] - Memory 
Plus - прибавление к числу, содержащемуся
в памяти числа, ранее туда сохраненного , 
[M-] - Memory Minus - вычитание из числа,
содержащегося в памяти числа, ранее туда 
сохраненного.

Математический калькулятор:

[sin],[cos],[tan],[cotan] - клавиши для 
вычисления математических функций 
синус, косинус, тангенс и котангенс 
соответственно.
[arcsin],[arccos],[arctan].[arccotan] - клавиши 
для вычисления обратных математических
функций арксинус, арккосинус, арктангенс и 
арккотангенс соответственно
[|x|] - клавиша для вычисления модуля 
заданного числа
[3√] - клавиша для вычисления 
кубического корня из заданного числа
[Ln]- клавиша для вычисления натурального 
логарифма( логарифма по основанию е)
из заданного числа
[Log10] - клавиша для вычисления 
логорифма по основанию 10 из заданного 
числа
[(],[)] - клавиши добавления приоритетности 
вычислений, открывающаяся и 
закрывающаяся скобки. Во время 
вычислений сначала считайте то, что в 
скобках, а уже потом остальные действия.
Например: (2+1)*8 = 24. Прописывать 
именно в таком порядке.
[10^a] - клавиша для вычисления 10 в 
степени заданного числа (сначало вводится 
число. т.е. степень,
в которую нужно возвести 10, а потом 
нажимается клавиша [10^a])
[e], [Pi] - клавиши для ввода значения числа 
е (Экспонента) и числа Пи соответственно
[e^a] - клавиша вычисления значения числа е 
(Экспонента) в степени заданного числа
(сначала вводится число. т.е. степень, а 
потом нажимается клавиша [e^a]) 
[x^3] - клавиша вычисления куба заданного 
числа (сначала вводится число. т.е. степень, 
а потом нажимается
клавиша [x^3])
[1/x] - клавиша вычисления дроби 1/ на 
заданное число.
[2^a] - клавиша вычисления степени числа 2 
(сначала вводится значение степени, а 
потом нажимается
клавиша [2^a])

Астрономический калькулятор:

Калькулятор производит расчет фазы Луны 
по заданным значениям
дня, месяца и года. Ввод значений для дня и 
месяца производится БЕЗ 0
(01 день - НЕПРАВИЛЬНО, 1 день - 
ПРАВИЛЬНО).
Календарь рассчитан на период с 1900 по 
2051 годы.

Калькулятор перевода едениц измерения:

[=]2 - клавиша-команда для выполнения 
перевода
Калькулятор осуществляет перевод 
заданного числа из окна правого столбика с 
заданными еденицами измерения в 
окно левого столбика с заданными 
еденицами измерения ПО НАЖАТИЮ КНОПКИ 
РАВНО [=]2, НАХОДЯЩЕЙСЯ МЕЖДУ НИМИ
</value>
  </data>
</root>